name: Java CI with Docker and Checkstyle

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build-test-checkstyle:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get remove -y docker docker-engine docker.io containerd runc || true
          sudo apt-get install -y ca-certificates curl gnupg lsb-release
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
          sudo systemctl start docker
          sudo docker version
          sudo docker compose version

      - name: Build ApiGateway JAR
        run: |
          cd ApiGateway
          ./gradlew build

      - name: Build EventService JAR
        run: |
          cd EventService
          ./gradlew build

      - name: Build NotificationService JAR
        run: |
          cd NotificationService
          ./gradlew build

      - name: Build UserService JAR
        run: |
          cd UserService
          ./gradlew build

      - name: Build Docker containers
        run: docker compose build

      - name: Run Docker containers
        run: docker compose up -d


      - name: Upload test reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            UserService/build/reports/tests/test/
            EventService/build/reports/tests/test/
            NotificationService/build/reports/tests/test/

      - name: Tear down containers
        run: docker compose down